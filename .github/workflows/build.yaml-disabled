name: Build Go Binary
on:
  schedule:
    - cron: '0 0/1 * * *'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REPO_TS: "tailscale/tailscale"
      # TODO: If you have forked ot copied this code you need to change to your repository here.
      REPO_SMALL_TS: "lwbt/ts_build_test"
    strategy:
      matrix:
        go-version: [stable]
        os: [linux]
        platform: [amd64, arm, arm64, mips]
    steps:
      - name: Get latest Tailscale tag
        run: |
          latest_tag=$(curl -s "https://api.github.com/repos/${{ env.REPO_TS }}/releases/latest" | grep -oP '"tag_name": "\K(.*)(?=")')
          echo "TAG=$latest_tag" >> $GITHUB_ENV
          echo "Latest Tailscale Tag: $latest_tag"
      - name: Get latest Tailscale Small tag
        run: |
          latest_tag=$(curl -s "https://api.github.com/repos/${{ env.REPO_SMALL_TS }}/releases/latest" | grep -oP '"tag_name": "\K(.*)(?=")' || echo "")
          echo "TAG_SMALL=$latest_tag" >> $GITHUB_ENV
          echo "Latest Tailscale Small Tag: $latest_tag"
      - name: Checkout Tailscale code
        if: env.TAG_SMALL != env.TAG
        uses: actions/checkout@v4
        with:
          repository: tailscale/tailscale
          ref: ${{ env.TAG }}
      - name: Checkout Tailscale Small code
        if: env.TAG_SMALL != env.TAG
        uses: actions/checkout@v4
        with:
          path: tools
      - name: Setup Go
        if: env.TAG_SMALL != env.TAG
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Download Go modules
        if: env.TAG_SMALL != env.TAG
        run: go mod download
      - name: Cross-compile for ${{ matrix.platform }}
        if: env.TAG_SMALL != env.TAG
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.platform }} ./build_dist.sh --extra-small --box -o tailscaled-${{ matrix.os }}-${{ matrix.platform }} ./cmd/tailscaled
      - name: Get UPX latest version
        if: env.TAG_SMALL != env.TAG
        id: get-upx-version
        run: |
          echo "UPX_VERSION=$(curl -s https://api.github.com/repos/upx/upx/releases/latest | jq -r '.tag_name' | cut -c 2-)" >> $GITHUB_ENV
      - name: Download UPX
        if: env.TAG_SMALL != env.TAG
        run: |
          wget -q "https://github.com/upx/upx/releases/download/v${{ env.UPX_VERSION }}/upx-${{ env.UPX_VERSION }}-amd64_linux.tar.xz"
          tar --to-stdout -xf "upx-${{ env.UPX_VERSION }}-amd64_linux.tar.xz" "upx-${{ env.UPX_VERSION }}-amd64_linux/upx" > "${PWD}/upx"
          chmod -v +x "${PWD}/upx"
      - name: Compress Binary with UPX
        if: env.TAG_SMALL != env.TAG
        run: |
          "${PWD}/upx" --lzma --best --no-progress "tailscaled-${{ matrix.os }}-${{ matrix.platform }}"
          sha256sum "tailscaled-${{ matrix.os }}-${{ matrix.platform }}" > "tailscaled-${{ matrix.os }}-${{ matrix.platform }}.sha256"
      - name: Create tag in Tailscale Small repository
        if: env.TAG_SMALL != env.TAG
        run: |
          cd tools
          if git rev-parse --quiet --verify "refs/tags/${{ env.TAG }}"; then
            echo "Tag already exists"
            exit 0
          else
            echo "Tag does not exist, creating"
            git config --global user.email "lwbt_pipeline@github.com"
            git config --global user.name "lwbt"
            git tag ${{ env.TAG }}
            git push --tags
          fi
      - name: Create Release
        if: env.TAG_SMALL != env.TAG
        uses: ncipollo/release-action@v1
        with:
          name: Small Tailscale ${{ env.TAG }}
          tag: ${{ env.TAG }}
          body: |
            Small Tailscale build ${{ env.TAG }}

            For a complete changelog go to https://github.com/${{ env.REPO_TS }}/releases/tag/${{ env.TAG }}

            This release was created by:

            * Building a combined binary of `tailscale` and `tailscaled`
            * Using the build option `--extra-small`
            * Compressing the binary with UPX

            To use both programs, rename `tailscaled-OS-ARCH` to `tailscaled` and create a symbolic (`ln -sv tailscaled tailscale`)
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          allowupdates: true
          artifacts: |
            tailscaled-${{ matrix.os }}-${{ matrix.platform }}
            tailscaled-${{ matrix.os }}-${{ matrix.platform }}.sha256
